[build-system]
requires = ["setuptools>=61.0.0", "wheel","setuptools-git-versioning>=2.0,<3"]
build-backend = "setuptools.build_meta"

[project]
name="smlight-cc-flasher"
dynamic = ["version"]
description="Flasher for SMLIGHT CC26xx Devices"
readme="README.md"
authors=[
	{ name = "Tim Lunn", email = "tl@smlight.tech" },
	{ name = "Jelmer Tiete", email = "jelmer@tiete.be" }
]
license = { file = "LICENSE" }
classifiers=[
		"Development Status :: 4 - Beta",
		"Environment :: Console",
		"Intended Audience :: End Users/Desktop",
		"License :: OSI Approved :: Apache Software License",
		"Operating System :: POSIX :: Linux",
		"Operating System :: MacOS",
		"Operating System :: Microsoft :: Windows",
		"Programming Language :: Python :: 3",
		"Topic :: Scientific/Engineering",
]
dependencies = [
	"coloredlogs==15.0",
	"intelhex==2.3.0",
	"pyserial-asyncio==0.6",
	"pysmlight==0.0.12",
	"python_magic==0.4.27",
	"tqdm==4.66.4",
]

requires-python = ">=3.10"

[project.scripts]
smlight_cc_flasher = "smlight_cc_flasher.__main__:main"

[tool.setuptools]
include-package-data = true
package-data = { "smlight_cc_flasher" = ["VERSION"] }

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]

[tool.setuptools-git-versioning]
enabled = true
version_file = "smlight_cc_flasher/VERSION"

[project.optional-dependencies]
testing = [
		"pytest>=7.3.1",
		"pytest-asyncio>=0.21.0",
		"pytest-timeout>=2.1.0",
		"pytest-mock>=3.10.0",
		"pytest-cov>=4.1.0",
		"pytest-github-actions-annotate-failures",
		"scripttest==1.3",
]

[tool.ruff]
select = [
		# Pyflakes
		"F",
		# Pycodestyle
		"E",
		"W"
]
src = ["smlight_cc_flasher", "tests"]

[tool.pytest.ini_options]
addopts = "--showlocals --verbose"
testpaths = ["tests"]
timeout = 20
log_format = "%(asctime)s.%(msecs)03d %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"

[tool.mypy]
check_untyped_defs = true
show_error_codes = true
show_error_context = true
disable_error_code = [
	"attr-defined",
	"arg-type",
]

[tool.isort]
profile = "black"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
known_first_party = ["universal_silabs_flasher", "tests"]
forced_separate = "tests"
combine_as_imports = true

[tool.flake8]
exclude = [".venv", ".git", ".tox", "docs", "venv", "bin", "lib", "deps", "build"]
# To work with Black
max-line-length = 88
# W503: Line break occurred before a binary operator
# E203: Whitespace before ':'
# E501: line too long
# D202 No blank lines allowed after function docstring
ignore = ["W503", "E203", "E501", "D202"]
per-file-ignores = ["tests/*:F811,F401,F403"]

[tool.pyupgrade]
py38plus = true
